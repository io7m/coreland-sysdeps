#!/bin/sh

fatal()
{
  echo "fatal: $1" 1>&2
  exit 1
}

tempi16="$1"
tempi32="$2"
tempi64="$3"
tempu16="$4"
tempu32="$5"
tempu64="$6"
tempsys="$7"

cc -o int16_make int16_make.c
if [ $? -ne 0 ]; then fatal "error compiling int16_make"; fi
cc -o int32_make int32_make.c
if [ $? -ne 0 ]; then fatal "error compiling int32_make"; fi
cc -o int64_make int64_make.c
if [ $? -ne 0 ]; then fatal "error compiling int64_make"; fi

cc -o uint16_make uint16_make.c
if [ $? -ne 0 ]; then fatal "error compiling uint16_make"; fi
cc -o uint32_make uint32_make.c
if [ $? -ne 0 ]; then fatal "error compiling uint32_make"; fi
cc -o uint64_make uint64_make.c
if [ $? -ne 0 ]; then fatal "error compiling uint64_make"; fi

./int16_make 1>${tempi16} 2>>${tempsys}
if [ $? -ne 0 ]; then fatal "could not get 16-bit signed ints"; fi
./int32_make 1>${tempi32} 2>>${tempsys}
if [ $? -ne 0 ]; then fatal "could not get 32-bit signed ints"; fi
./int64_make 1>${tempi64} 2>>${tempsys}
if [ $? -ne 0 ]; then fatal "could not get 64-bit signed ints"; fi

./uint16_make 1>${tempu16} 2>>${tempsys}
if [ $? -ne 0 ]; then fatal "could not get 16-bit unsigned ints"; fi
./uint32_make 1>${tempu32} 2>>${tempsys}
if [ $? -ne 0 ]; then fatal "could not get 32-bit unsigned ints"; fi
./uint64_make 1>${tempu64} 2>>${tempsys}
if [ $? -ne 0 ]; then fatal "could not get 64-bit unsigned ints"; fi

exit 0
