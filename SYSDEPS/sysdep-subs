#!/bin/sh

#
# Essential subprograms.
#

SYSDEP_FATAL()
{
  if [ ! -z "${SYSDEP_MODULE}" ]
  then
    echo "${SYSDEP_MODULE}: fatal: $1" 1>&2
  else
    echo "sysdep-main: fatal: $1" 1>&2
  fi
  exit 1
}

SYSDEP_ERROR()
{
  if [ ! -z "${SYSDEP_MODULE}" ]
  then
    echo "${SYSDEP_MODULE}: error: $1" 1>&2
  else
    echo "sysdep-main: error: $1" 1>&2
  fi
}

SYSDEP_INFO()
{
  if [ ! -z "${SYSDEP_MODULE}" ]
  then
    echo "${SYSDEP_MODULE}: info: $1" 1>&2
  else
    echo "sysdep-main: info: $1" 1>&2
  fi
}

SYSDEP_DEBUG()
{
  if [ -f "${SYSDEP_BASE_DIRECTORY}/conf-debug" ]
  then
    if [ ! -z "${SYSDEP_MODULE}" ]
    then
      echo "${SYSDEP_MODULE}: debug: $1" 1>&2
    else
      echo "sysdep-main: debug: $1" 1>&2
    fi
  fi
}

SYSDEP_REMOVE()
{
  SYSDEP_DEBUG "remove $@"
  rm -f $@
  return $?
}

SYSDEP_MOVE()
{
  SYSDEP_DEBUG "move $1 $2"
  mv -f "$1" "$2"
  return $?
}

#
# Obtain current working directory.
#

SYSDEP_BASE_DIRECTORY=`pwd` ||
  SYSDEP_FATAL "could not obtain current working directory (problem with 'pwd')"
export SYSDEP_BASE_DIRECTORY
SYSDEP_DEBUG "SYSDEP_BASE_DIRECTORY ${SYSDEP_BASE_DIRECTORY}"

#
# Assign variables/subprograms for use in modules.
#

SYSDEP_TRY_CONFIG_BIN="${SYSDEP_BASE_DIRECTORY}/sd-configbin"
SYSDEP_TRY_PKG_CONFIG="${SYSDEP_BASE_DIRECTORY}/sd-configpkg"
SYSDEP_TRY_MANUAL="${SYSDEP_BASE_DIRECTORY}/sd-configman"
SYSDEP_FILE="${SYSDEP_BASE_DIRECTORY}/sd-file"
SYSDEP_LINE="${SYSDEP_BASE_DIRECTORY}/sd-line"

export SYSDEP_TRY_CONFIG_BIN
export SYSDEP_TRY_PKG_CONFIG
export SYSDEP_TRY_MANUAL
export SYSDEP_FILE
export SYSDEP_LINE

#
# OUTDIR is below the base directory unless overridden.
#
SYSDEP_OUTPUT_DIRECTORY="../"

#
# Override with contents of conf-outdir, if it exists.
#

if [ -f "conf-outdir" ]
then
  DIRECTORY=`head -n 1 "conf-outdir"`
  if [ $? -eq 0 ]
  then
    SYSDEP_OUTPUT_DIRECTORY="${DIRECTORY}"
  else
    SYSDEP_FATAL "conf-outdir exists but could not be read"
  fi
fi
export SYSDEP_OUTPUT_DIRECTORY
SYSDEP_DEBUG "SYSDEP_OUTPUT_DIRECTORY ${SYSDEP_OUTPUT_DIRECTORY}"

#
# Obtain name of module based on current directory.
#

if [ $# -ne 1 ]
then
  SYSDEP_FATAL "wrong arguments to sysdep-subs"
fi

SYSDEP_MODULE_PATH="$1"
SYSDEP_MODULE="`basename ${SYSDEP_MODULE_PATH}`" ||
  SYSDEP_FATAL "could not translate current working directory (problem with 'basename')"
export SYSDEP_MODULE_PATH
export SYSDEP_MODULE

