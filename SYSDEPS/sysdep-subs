#!/bin/sh

error()
{
  echo "$1" 1>&2
}

# find system type
SYSDEP_SYSTYPE="`uname -s | tr '/:[A-Z]' '..[a-z]'`"
if [ $? -ne 0 ]
then
  error "fatal: could not get system type"
  exit 1
fi
export SYSDEP_SYSTYPE

# standard include path
SYSDEP_STDINC="/usr/include /usr/local/include"
case ${SYSDEP_SYSTYPE} in
  darwin) SYSDEP_STDINC="/sw/include ${SYSDEP_STDINC}";;
  sunos) SYSDEP_STDINC="/usr/sfw/include ${SYSDEP_STDINC}";;
  *)
esac
export SYSDEP_STDINC

# standard library path
SYSDEP_STDLIB="/usr/lib /usr/local/lib"
case ${SYSDEP_SYSTYPE} in
  darwin) SYSDEP_STDLIB="/sw/lib ${SYSDEP_STDLIB}";;
  sunos) SYSDEP_STDLIB="/usr/sfw/lib ${SYSDEP_STDLIB}";;
  *)
esac
export SYSDEP_STDLIB

# find system dynamic library suffix
SYSDEP_LIBSUFFIX="so"
case ${SYSDEP_SYSTYPE} in
  darwin) SYSDEP_LIBSUFFIX="dylib" ;;
  hp-ux) SYSDEP_LIBSUFFIX="sl";;
  *) ;;
esac
export SYSDEP_LIBSUFFIX

#
# interface functions
#

try_config_bin()
{
  config="$1"
  flags="$2"
  ${config} ${flags} 2>/dev/null
  return $?
}

try_pkg_config()
{
  pkgname="$1"
  flags="$2"
  pkg-config ${flags} ${pkgname} 2>/dev/null
  return $?
}

try_manual_search()
{
  file="$1"
  path="$2"
  prefix="$3"

  for f in ${path}
  do
    if [ -f "${f}/${file}" ]
    then
      echo "${prefix}${f} "
      return 0
    fi
  done
  return 1
}

