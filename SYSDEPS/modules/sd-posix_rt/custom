#!/bin/sh

. "${SYSDEP_SUBS_FILE}" || exit 1

libs_out="$1"
flag_out="$2"
head_out="$3"
sysd_out="$4"

PRT_FLAGS=""
PRT_LIBS=""
PRT_HAVE=0

cleanup()
{
  ${SYSDEP_UTIL_RM} -f trylink trylink.o
}

try_posix_rt()
{
  ${SYSDEP_CC} ${SYSDEP_CFLAGS} ${PRT_FLAGS} \
    -c -o trylink.o trylink.c 1>/dev/null 2>&1
  ${SYSDEP_LD} \
    -o trylink trylink.o ${SYSDEP_LDFLAGS} ${PRT_LIBS} 1>/dev/null 2>&1
 
  if [ $? -eq 0 ]
  then
    ${SYSDEP_UTIL_ECHO} "${PRT_FLAGS}" >> "${flag_out}"
    ${SYSDEP_UTIL_ECHO} "${PRT_LIBS}" >> "${libs_out}"
    ${SYSDEP_UTIL_ECHO} "sd-posix_rt-flags: ${PRT_FLAGS}" >> "${sysd_out}"
    ${SYSDEP_UTIL_ECHO} "sd-posix_rt-libs: ${PRT_LIBS}" >> "${sysd_out}"
    PRT_HAVE=1
    cleanup
    return 0
  fi
  cleanup
  return 1
}

try_posix_rt_funcs()
{
  ${SYSDEP_UTIL_CAT} >> "${head_out}" << EOF
#ifndef _SD_POSIX_RT_H
#define _SD_POSIX_RT_H

EOF

  if [ ! -d tmp ]
  then
    ${SYSDEP_UTIL_MKDIR} tmp || fatal "could not create tmp"
  fi

  RT_FUNCTIONS=`${SYSDEP_UTIL_ECHO} functions/*` ||
    fatal "could not list rt functions"

  for rt_func_path in ${RT_FUNCTIONS}
  do
    rt_func=`${SYSDEP_UTIL_BASENAME} ${rt_func_path}` || 
      fatal "could not retrieve function name"

    FUNC=`${SYSDEP_UTIL_ECHO} ${rt_func} | ${SYSDEP_UTIL_TR} [a-z] [A-Z]`

    ${SYSDEP_CC} ${SYSDEP_CFLAGS} ${PRT_FLAGS} \
      -c -o tmp/${rt_func}.o functions/${rt_func}/${rt_func}.c 1>/dev/null 2>&1
    ${SYSDEP_LD} \
      -o tmp/${rt_func} tmp/${rt_func}.o ${SYSDEP_LDFLAGS} ${PRT_LIBS} 1>/dev/null 2>&1

    if [ $? -eq 0 ]
    then
      ${SYSDEP_UTIL_ECHO} "#define SD_HAVE_POSIX_RT_${FUNC} 1" >> "${head_out}"
      funcs="${rt_func} ${funcs}"
    fi
    ${SYSDEP_UTIL_RM} -f tmp/${rt_func} tmp/${rt_func}.o ||
      fatal "could not remove temporary files"
  done

  ${SYSDEP_UTIL_CAT} >> "${head_out}" <<EOF

#endif
EOF

  ${SYSDEP_UTIL_ECHO} "sd-posix_rt-funcs: ${funcs}" >> "${sysd_out}"
  ${SYSDEP_UTIL_EXIT} 0
}

#
# try combinations of flags and libs to get posix_rt libs
#

PRT_FLAGS=""
PRT_LIBS="-lposix4"
try_posix_rt
if [ $? -eq 0 ]; then try_posix_rt_funcs; fi

PRT_FLAGS=""
PRT_LIBS="-lrt"
try_posix_rt
if [ $? -eq 0 ]; then try_posix_rt_funcs; fi

PRT_FLAGS=""
PRT_LIBS=""
try_posix_rt
if [ $? -eq 0 ]; then try_posix_rt_funcs; fi

#
# fallback
#

try_posix_rt_funcs
