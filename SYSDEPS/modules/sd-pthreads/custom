#!/bin/sh

. "${SYSDEP_SUBS_FILE}" || exit 1

pthr_libs_out="$1"
pthr_flag_out="$2"
pthr_rt_libs_out="$3"
pthr_rt_flag_out="$4"
sysd_out="$5"

PTHREAD_FLAGS="-DHAVE_PTHREADS -D_REENTRANT"
PTHREAD_LIBS=""
PTHR_REALTIME_FLAGS="-DHAVE_PTHREADS_REALTIME"
PTHR_REALTIME_LIBS=""

cleanup()
{
  ${SYSDEP_UTIL_RM} -f trypthreads tryptrealtime
  ${SYSDEP_UTIL_EXIT} 0
}

try_one_pthread()
{
  ${SYSDEP_CC} ${SYSDEP_CFLAGS} ${PTHREAD_FLAGS} \
    -c -o trypthreads.o trypthreads.c 1>/dev/null 2>&1
  ${SYSDEP_LD} \
    -o trypthreads trypthreads.o ${SYSDEP_LDFLAGS} ${PTHREAD_LIBS} 1>/dev/null 2>&1
 
  if [ $? -eq 0 ]
  then
    return 0
  else
    return 1
  fi
}

try_one_realtime()
{
  ${SYSDEP_CC} ${SYSDEP_CFLAGS} ${PTHREAD_FLAGS} ${PTHR_REALTIME_FLAGS} \
    -o tryptrealtime.o tryptrealtime.c 1>/dev/null 2>&1
  ${SYSDEP_LD} \
    -o tryptrealtime tryptrealtime.o ${SYSDEP_LDFLAGS} ${PTHREAD_LIBS} ${PTHR_REALTIME_LIBS} 1>/dev/null 2>&1
 
  if [ $? -eq 0 ]
  then
    return 0
  else
    return 1
  fi
}

try_pthreads()
{
  # default pthread libs
  try_one_pthread
  if [ $? -eq 0 ]; then return 0; fi

  PTHREAD_LIBS="-pthread"
  try_one_pthread
  if [ $? -eq 0 ]; then return 0; fi

  return 1
}

try_realtime()
{
  REALTIME_LIBS=""
  try_one_realtime
  if [ $? -eq 0 ]; then return 0; fi

  REALTIME_LIBS="-lrt"
  if [ $? -eq 0 ]; then return 0; fi

  return 1
}

case ${SYSDEP_CC_TYPE} in
  SYSDEP_CC_TYPE_SUN_C)
    PTHREAD_FLAGS="-mt ${PTHREAD_FLAGS}"
    PTHREAD_LIBS="${PTHREAD_LIBS} -lposix4"
    ;;
  SYSDEP_CC_TYPE_SUN_CXX)
    PTHREAD_FLAGS="-mt ${PTHREAD_FLAGS}"
    PTHREAD_LIBS="${PTHREAD_LIBS} -lposix4"
    ;;
  *)
    ;;
esac

try_pthreads
if [ $? -eq 0 ]
then
  try_realtime
  if [ $? -eq 0 ]
  then
    ${SYSDEP_UTIL_ECHO} "${PTHR_REALTIME_FLAGS}" >> "${pthr_rt_flag_out}"
    ${SYSDEP_UTIL_ECHO} "${PTHR_REALTIME_LIBS}" >> "${pthr_rt_libs_out}"
    ${SYSDEP_UTIL_ECHO} "sd-pthr-realtime-flags: ${PTHR_REALTIME_FLAGS}" >> "${sysd_out}"
    ${SYSDEP_UTIL_ECHO} "sd-pthr-realtime-libs: ${PTHR_REALTIME_LIBS}" >> "${sysd_out}"
  else
    ${SYSDEP_UTIL_TOUCH} "${pthr_rt_flag_out}"
    ${SYSDEP_UTIL_TOUCH} "${pthr_rt_libs_out}"
    ${SYSDEP_UTIL_TOUCH} "${sysd_out}"
  fi
  ${SYSDEP_UTIL_ECHO} "${PTHREAD_FLAGS}" >> "${pthr_flag_out}"
  ${SYSDEP_UTIL_ECHO} "${PTHREAD_LIBS}" >> "${pthr_libs_out}"
  ${SYSDEP_UTIL_ECHO} "sd-pthreads-flags: ${PTHREAD_FLAGS}" >> "${sysd_out}"
  ${SYSDEP_UTIL_ECHO} "sd-pthreads-libs: ${PTHREAD_LIBS}" >> "${sysd_out}"
else
  ${SYSDEP_UTIL_TOUCH} "${pthr_flag_out}"
  ${SYSDEP_UTIL_TOUCH} "${pthr_libs_out}"
  ${SYSDEP_UTIL_TOUCH} "${sysd_out}"
fi

cleanup
