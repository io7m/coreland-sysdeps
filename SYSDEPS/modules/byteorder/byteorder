#!/bin/sh

cleanup()
{
  rm -f make-byteorder make-byteorder.o
}

fatal()
{
  echo "fatal: $1" 1>&2
  cleanup
  exit 1
}

temph="$1"
tempsys="$2"

cat >> "${temph}" << EOF
#ifndef _BYTEORDER_H
#define _BYTEORDER_H

#define E_BIG_ENDIAN 0
#define E_LITTLE_ENDIAN 1

EOF

if [ ${SYSDEP_CROSS_COMPILE} -eq 0 ]
then
  ${SYSDEP_CC} ${SYSDEP_CFLAGS} -c -o make-byteorder.o make-byteorder.c
  ${SYSDEP_LD} -o make-byteorder make-byteorder.o ${SYSDEP_LDFLAGS}
  if [ $? -ne 0 ]; then fatal "error compiling make-byteorder"; fi

  order=`./make-byteorder`
  if [ $? -ne 0 ]; then fatal "could not execute make-byteorder"; fi
else
  conf=`head -n 1 CONFIG`
  order=`${SYSDEP_FILE} get "${conf}" ""`
  if [ -z "${order}" ]
  then
    fatal "cross compiling and unable to read ${conf}"
  fi
fi

case "${order}" in
  little)
    echo '#define E_ENDIANNESS E_LITTLE_ENDIAN' >> "${temph}"
    echo 'byteorder: little' >> "${tempsys}"
    ;;
  big)
    echo '#define E_ENDIANNESS E_BIG_ENDIAN' >> "${temph}"
    echo 'byteorder: big' >> "${tempsys}"
    ;;
  *)
    fatal "unknown byte ordering"
    ;;
esac

echo '#endif' >> "${temph}"

cleanup
exit 0
