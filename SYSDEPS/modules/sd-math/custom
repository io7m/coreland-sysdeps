#!/bin/sh

. "${SYSDEP_SUBS_FILE}" || exit 1

libs_out="$1"
flag_out="$2"
head_out="$3"
sysd_out="$4"

M_FLAGS=""
M_LIBS=""
M_HAVE=0

cleanup()
{
  ${SYSDEP_UTIL_RM} -f trymath1 trymath1.o
}

fatal()
{
  cleanup
  SYSDEP_FATAL "$1"
}

try_math()
{
  ${SYSDEP_CC} ${SYSDEP_CFLAGS} ${M_FLAGS} \
    -c -o trymath1.o trymath1.c 1>/dev/null 2>&1
  ${SYSDEP_LD} \
    -o trymath1 trymath1.o ${SYSDEP_LDFLAGS} ${M_LIBS} 1>/dev/null 2>&1

  if [ $? -eq 0 ]
  then
    ${SYSDEP_UTIL_ECHO} "${M_FLAGS}" >> "${flag_out}"
    ${SYSDEP_UTIL_ECHO} "${M_LIBS}" >> "${libs_out}"
    ${SYSDEP_UTIL_ECHO} "sd-math-flags: ${M_FLAGS}" >> "${sysd_out}"
    ${SYSDEP_UTIL_ECHO} "sd-math-libs: ${M_LIBS}" >> "${sysd_out}"
    M_HAVE=1
    cleanup
    return 0
  fi
  cleanup
  return 1
}

try_math_funcs()
{
  ${SYSDEP_UTIL_CAT} >> "${head_out}" << EOF
#ifndef _SD_MATH_H
#define _SD_MATH_H

EOF

  if [ ! -d tmp ]
  then
    ${SYSDEP_UTIL_MKDIR} tmp || fatal "could not create tmp"
  fi

  FUNC_PATHS=`${SYSDEP_UTIL_ECHO} math_funcs/*` ||
    fatal "could not list math functions"

  for math_func_path in ${FUNC_PATHS}
  do
    math_func=`${SYSDEP_UTIL_BASENAME} ${math_func_path}` ||
      fatal "could not retrieve name of function"
    FUNC=`${SYSDEP_UTIL_ECHO} ${math_func} | ${SYSDEP_UTIL_TR} [a-z] [A-Z]` ||
      fatal "could not convert name to uppercase"

    ${SYSDEP_CC} ${SYSDEP_CFLAGS} ${M_FLAGS} \
      -c -o tmp/${math_func}.o math_funcs/${math_func}/${math_func}.c 1>/dev/null 2>&1
    ${SYSDEP_LD} \
      -o tmp/${math_func} tmp/${math_func}.o ${SYSDEP_LDFLAGS} ${M_LIBS} 1>/dev/null 2>&1

    if [ $? -eq 0 ]
    then
      ${SYSDEP_UTIL_ECHO} "#define SD_HAVE_MATH_${FUNC} 1" >> "${head_out}"
      funcs="${math_func} ${funcs}"
    fi

    ${SYSDEP_UTIL_RM} -f tmp/${math_func} tmp/${math_func}.o ||
      fatal "could not remove temporary files"
  done

  ${SYSDEP_UTIL_CAT} >> "${head_out}" << EOF

#endif
EOF

  ${SYSDEP_UTIL_ECHO} "sd-math-funcs: ${funcs}" >> "${sysd_out}"
  cleanup
  ${SYSDEP_UTIL_EXIT} 0
}

#
# Try combinations of flags and libs to get math libs
# order is, unfortunately, significant.
#

M_FLAGS=""
M_LIBS="-lm"
try_math
if [ $? -eq 0 ]; then try_math_funcs; fi

M_FLAGS=""
M_LIBS=""
try_math
if [ $? -eq 0 ]; then try_math_funcs; fi

#
# Fallback.
#

try_math_funcs
