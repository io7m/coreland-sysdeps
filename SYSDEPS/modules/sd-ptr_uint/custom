#!/bin/sh

. "${SYSDEP_SUBS_FILE}" || exit 1

cleanup()
{
  ${SYSDEP_UTIL_RM} -f \
    try_ptr_uint1 try_ptr_uint1.o \
    try_ptr_uint2 try_ptr_uint2.o \
    try_stdint try_stdint.o
}

fatal()
{
  cleanup
  SYSDEP_FATAL "$1"
}

have_it()
{
  type="$1"
  extra="$2"

  ${SYSDEP_UTIL_CAT} >> "${temp_f}" <<EOF
#ifndef _SD_PTR_UINT_H
#define _SD_PTR_UINT_H

$extra
typedef $type sd_ptr_uint;

#endif
EOF
  ${SYSDEP_UTIL_ECHO} "sd-ptr_uint: ${type}" >> "${temp_sys}"
  cleanup
  ${SYSDEP_UTIL_EXIT} 0
}

temp_f="$1"
temp_sys="$2"

${SYSDEP_CC} ${SYSDEP_CFLAGS} -c -o try_stdint.o try_stdint.c 1>/dev/null 2>&1
${SYSDEP_LD} -o try_stdint try_stdint.o ${SYSDEP_LDFLAGS} 1>/dev/null 2>&1
if [ $? -eq 0 ]
then
  have_it "uintptr_t" "#include <stdint.h>"
fi

${SYSDEP_CC} ${SYSDEP_CFLAGS} -c -o try_ptr_uint1.o try_ptr_uint1.c 1>/dev/null 2>&1
${SYSDEP_LD} -o try_ptr_uint1 try_ptr_uint1.o ${SYSDEP_LDFLAGS} 1>/dev/null 2>&1
if [ $? -eq 0 ]
then
  type=`./try_ptr_uint1`
  if [ $? -eq 0 ]
  then
    have_it "${type}"
  else
    ${SYSDEP_CC} ${SYSDEP_CFLAGS} -c -o try_ptr_uint2.o try_ptr_uint2.c 1>/dev/null 2>&1
    ${SYSDEP_LD} -o try_ptr_uint2 try_ptr_uint2.o ${SYSDEP_LDFLAGS} 1>/dev/null 2>&1
    if [ $? -eq 0 ]
    then
      type=`./try_ptr_uint2`
      if [ $? -eq 0 ]
      then
        have_it "${type}"
      fi
    fi
  fi
fi

fatal "could not get integer type equal in size to pointer"
cleanup
${SYSDEP_UTIL_EXIT} 0
