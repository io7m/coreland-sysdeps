#!/bin/sh

#
# sysdep-main
#
# This file is only ever called by modules, so all paths must be
# relative to the module ("../../").
#

#
# Essential subprograms.
#

SYSDEP_FATAL()
{
  if [ ! -z "${SYSDEP_MODULE}" ]
  then
    echo "${SYSDEP_MODULE}: fatal: $1" 1>&2
  else
    echo "sysdep-main: fatal: $1" 1>&2
  fi
  exit 1
}

SYSDEP_ERROR()
{
  if [ ! -z "${SYSDEP_MODULE}" ]
  then
    echo "${SYSDEP_MODULE}: error: $1" 1>&2
  else
    echo "sysdep-main: error: $1" 1>&2
  fi
}

SYSDEP_INFO()
{
  if [ ! -z "${SYSDEP_MODULE}" ]
  then
    echo "${SYSDEP_MODULE}: info: $1" 1>&2
  else
    echo "sysdep-main: info: $1" 1>&2
  fi
}

SYSDEP_DEBUG()
{
  if [ -f "${SYSDEP_DIR_RELATIVE}/conf-debug" ]
  then
    if [ ! -z "${SYSDEP_MODULE}" ]
    then
      echo "${SYSDEP_MODULE}: debug: $1" 1>&2
    else
      echo "sysdep-main: debug: $1" 1>&2
    fi
  fi
}

SYSDEP_REMOVE()
{
  SYSDEP_DEBUG "remove $@"
  rm -f $@
  return $?
}

SYSDEP_MOVE()
{
  SYSDEP_DEBUG "move $1 $2"
  mv -f "$1" "$2"
  return $?
}

#
# Path from module to SYSDEPS dir (MUST end with trailing slash)
#
SYSDEP_DIR_RELATIVE="../../"
export SYSDEP_DIR_RELATIVE

#
# Assign variables/subprograms for use.
#

SYSDEP_TRY_CONFIG_BIN=${SYSDEP_DIR_RELATIVE}/sd-configbin
SYSDEP_TRY_PKG_CONFIG=${SYSDEP_DIR_RELATIVE}/sd-configpkg
SYSDEP_TRY_MANUAL=${SYSDEP_DIR_RELATIVE}/sd-configman
SYSDEP_FILE=${SYSDEP_DIR_RELATIVE}/sd-file
SYSDEP_LINE=${SYSDEP_DIR_RELATIVE}/sd-line

#
# OUTDIR is relative to each entry in modules directory unless overridden.
#
SYSDEP_OUTDIR="${SYSDEP_DIR_RELATIVE}/../"

#
# Override with contents of conf-outdir, if it exists.
#

if [ -f "${SYSDEP_DIR_RELATIVE}/conf-outdir" ]
then
  DIR=`head -n 1 "${SYSDEP_DIR_RELATIVE}/conf-outdir"`
  if [ $? -eq 0 ]
  then
    SYSDEP_OUTDIR="${SYSDEP_DIR_RELATIVE}/${DIR}"
  else
    SYSDEP_FATAL "conf-outdir exists but could not be read"
  fi
fi
export SYSDEP_OUTDIR

#
# Obtain current working directory.
#

PWD=`pwd` || SYSDEP_FATAL "could not obtain current working directory (problem with 'pwd')"

#
# Obtain name of module based on current directory.
#

SYSDEP_MODULE="`basename $PWD`" || SYSDEP_FATAL "could not translate current working directory (problem with 'basename')"

export SYSDEP_MODULE
export SYSDEP_TRY_CONFIG_BIN
export SYSDEP_TRY_PKG_CONFIG
export SYSDEP_TRY_MANUAL
export SYSDEP_FILE
export SYSDEP_LINE

#
# Call external modules.
#

if [ -z "${SYSDEP_CLEAN}" ]
then
  . ${SYSDEP_DIR_RELATIVE}/sysdep-compilers || exit 1
  . ${SYSDEP_DIR_RELATIVE}/sysdep-system    || exit 1
fi

. ${SYSDEP_DIR_RELATIVE}/sysdep-module    || exit 1
